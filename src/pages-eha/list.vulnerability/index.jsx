import { ArrowLeftOutlined, DeleteOutlined } from "@ant-design/icons"
import { GET_API_EHA } from "../../api/eha/GET"
import { ButtonComponents } from "../../components.eha/button"
import { SelectComponent } from "../../components.eha/select"
import { CardBox } from "../../components/layout/card"
import { LayoutDashboard } from "../../components/layout/dashboard.layout"
import { TitleContent } from "../../components/layout/title"
import { TableInline } from "../../components/table"
import { GetAndUpdateContext } from "../../model/context.function"
import { ErrorHtml, Loading } from "../list.maintenance"
import { AddModal } from "../list.task.scan/add.modal"
import { Popconfirm } from "antd"
import { DELETE_API } from "../../api/eha/DELETE"
import { FormAdd } from "./form-add"
import { useLocation, useNavigate } from "react-router-dom"

const ListTaskVulnerability = () => {
    const { setStatus, status } = GetAndUpdateContext()
    const stateLocation = useLocation()


    const API = GET_API_EHA.root([{
        active: "vulnerability",
    }])

    const navigate = useNavigate();

    return (
        <LayoutDashboard className="bg-[#101C26] text-[16px]">
            <div className="col-span-full flex-1 flex flex-col pb-10">
                <CardBox className="!p-0">
                    <div className="p-8 flex items-center justify-between border-b border-primary">
                        <div className="flex items-center gap-10">
                            <div>FUNCTION</div>
                            <div className="space-x-4 flex">
                                {/* <ButtonComponents>
                                    IMPORT
                                </ButtonComponents> */}
                                <ButtonComponents click={() => {
                                    setStatus(d => ({
                                        ...d,
                                        addvul: !d.addvul
                                    }))
                                }}>
                                    [ + ] ADD
                                </ButtonComponents>

                            </div>
                        </div>
                        {/* <div className="flex items-center gap-5">
                            <div>STATUS ASSET</div>
                            <SelectComponent></SelectComponent>
                        </div> */}
                    </div>
                </CardBox>
                <CardBox className="flex-1">
                    <TitleContent subTitle={false}>
                        <div className="flex justify-between w-full">
                            <div className="text-[24px] uppercase text-blue">vulnerabilities {stateLocation.state?.label ? `- ${stateLocation.state?.label}` : ""}</div>
                            {stateLocation.state?.label && <button onClick={() => navigate(-1)} className="border border-blue font-bold px-2 flex items-center gap-2">
                                <ArrowLeftOutlined></ArrowLeftOutlined> <span>GOBACK TO SCAN</span>
                            </button>}

                        </div>
                    </TitleContent>
                    {/* <div className="flex items-center gap-5">
                        <div className="text-[24px] uppercase text-blue">showing date range</div>
                        <Form.input type="date" rowColumn label={"short date"}></Form.input>
                        <Form.input type="date" rowColumn label={"end date"} ></Form.input>
                        <ButtonComponents>apply</ButtonComponents>
                    </div> */}
                    {API.msg || API.error ? <ErrorHtml error={API.msg}></ErrorHtml> : API.loading ? <Loading></Loading> :
                        <TableInline onChange={(s) => {
                            setStatus(d => ({
                                ...d,
                                vulnerabilitypages: s
                            }))
                        }} paggination totalPages={API.data.vulnerability.pagination.total_results} pageSize={15} currentPage={status.vulnerabilitypages} border hoverDisable columns={[
                            {
                                key: "id",
                                rowClass: "w-[120px]",
                                title: "ID",
                                html: (d) => {
                                    return `EL-${d}`
                                }
                            },
                            {
                                key: "reference",
                                rowClass: "w-[200px]",
                                title: "reference"
                            },
                            {
                                key: "finding_name",
                                title: "finding name"
                            },
                            {
                                key: "stage",
                                rowClass: "w-[100px]",
                                title: "stage"
                            },
                            {
                                key: "finding_owner",
                                rowClass: "w-[200px]",
                                title: "finding owner"
                            },
                            {
                                key: "addresses",
                                rowClass: "w-[120px]",
                                title: "addresses"
                            },
                            {
                                key: "risk_level",
                                title: "risk level"
                            },

                            {
                                key: "id",
                                title: "DELETE",
                                rowClass: "text-center",
                                columnClass: "text-center",
                                html: (s, d) => {
                                    return <Popconfirm okText="DELETE" cancelText="CANCEL" onConfirm={() => {
                                        let item = {
                                            id: s,
                                            name: d.created_by,
                                            site_name: d.reference
                                        }
                                        DELETE_API.deleteVulnerabilities(item, setStatus)
                                    }} title="Do you want to delete task scan?">
                                        <button><DeleteOutlined /></button>
                                    </Popconfirm>
                                }
                            }
                        ]}

                            data={API.data.vulnerability.result
                                // new Array(20).fill({
                                //     id: "EH-1",
                                //     asset_id: "-",
                                //     reference: "h194",
                                //     finding_name: "url-parse",
                                //     risk_level : "high",
                                //     stage: "awaiting remediation awaiting remediation awaiting remediation awaiting remediationawaiting remediationawaiting remediation awaiting remediationawaiting remediationawaiting remediationawaiting remediation",
                                //     asset_name: "home sample",
                                //     addresses: "192.168.0.1",
                                //     protected_site: "site_a",

                                // })
                            }></TableInline>
                    }

                </CardBox>
            </div >
            <FormAdd></FormAdd>
        </LayoutDashboard >
    )
}



export default ListTaskVulnerability